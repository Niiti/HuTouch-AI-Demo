/*[
  {
    "name": "PrimaryButton",
    "description": "Large, full-width rounded rectangle button used for main actions. Instances found: 'Sign In', 'Sign Up', 'Start', 'Add', 'Next', 'Done', 'Save Changes', 'Save', 'View More'.",
    "standardization": "Make text label and onPress action configurable. Optional icon can be a parameter if needed for new variants. Selection state (enabled/disabled) supported.",
    "styling_changes": "Minor width adjustments based on container. Consistent height, color (#426764), font, padding, and border radius; only text label varies.",
    "code": "// lib/widgets/buttons/build_me_up_buttons.dart\nimport 'package:flutter/material.dart';\nimport 'package:build_me_up/core/constants/app_colors.dart';\nimport 'package:build_me_up/core/constants/app_durations.dart';\n\nenum PrimaryButtonVariant { filled, outlined }\n\nclass PrimaryButton extends StatelessWidget {\n  final String text;\n  final VoidCallback onPressed;\n  final bool enabled;\n  final double height;\n  final BorderRadius borderRadius;\n  final Widget? icon;\n  final TextStyle? textStyle;\n  final PrimaryButtonVariant variant;\n\n  const PrimaryButton({\n    super.key,\n    required this.text,\n    required this.onPressed,\n    required this.height,\n    required this.borderRadius,\n    this.enabled = true,\n    this.icon,\n    this.textStyle,\n    this.variant = PrimaryButtonVariant.filled,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    final bgColor = variant == PrimaryButtonVariant.filled ? AppColors.primaryButton : Colors.transparent;\n    final fgColor = variant == PrimaryButtonVariant.filled ? AppColors.textOnPrimary : AppColors.primaryButton;\n    final borderSide = variant == PrimaryButtonVariant.outlined\n        ? BorderSide(color: AppColors.primaryButton, width: 1.5)\n        : BorderSide.none;\n\n    final effectiveTextStyle = (textStyle ?? TextStyle(fontWeight: FontWeight.w600, fontSize: height * 0.45)).copyWith(color: fgColor);\n\n    return Opacity(\n      opacity: enabled ? 1.0 : 0.6,\n      child: Material(\n        clipBehavior: Clip.antiAlias,\n        color: bgColor,\n        shape: RoundedRectangleBorder(borderRadius: borderRadius, side: borderSide),\n        child: InkWell(\n          onTap: enabled ? onPressed : null,\n          child: AnimatedContainer(\n            duration: AppDurations.short,\n            height: height,\n            padding: const EdgeInsets.symmetric(horizontal: 16),\n            alignment: Alignment.center,\n            child: Row(\n              mainAxisSize: MainAxisSize.min,\n              mainAxisAlignment: MainAxisAlignment.center,\n              children: [\n                if (icon != null) ...[\n                  icon!,\n                  const SizedBox(width: 8),\n                ],\n                Flexible(\n                  child: Text(\n                    text,\n                    maxLines: 1,\n                    overflow: TextOverflow.ellipsis,\n                    textAlign: TextAlign.center,\n                    style: effectiveTextStyle,\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n"
  },
  {
    "name": "UserAvatarIconButton",
    "description": "Circular user avatar icon, shown in the top right of multiple screens as a button for account/profile access.",
    "standardization": "Accept click handler, image source or fallback icon as parameters. Optionally configurable for size.",
    "styling_changes": "Margins from screen edge can vary slightly based on layout. Color and border radius consistent.",
    "code": "// lib/shared/components/user-avatar-icon-button.dart\nimport 'package:flutter/material.dart';\n\nclass UserAvatarIconButton extends StatelessWidget {\n  const UserAvatarIconButton({\n    super.key,\n    required this.onTap,\n    this.size = 40,\n    this.backgroundColor = const Color(0xFF426764),\n    this.iconColor = Colors.white,\n    this.imageProvider,\n  });\n\n  final VoidCallback onTap;\n  final double size;\n  final Color backgroundColor;\n  final Color iconColor;\n  final ImageProvider? imageProvider;\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: backgroundColor,\n      shape: const CircleBorder(),\n      clipBehavior: Clip.antiAlias,\n      child: InkWell(\n        onTap: onTap,\n        child: SizedBox(\n          width: size,\n          height: size,\n          child: imageProvider != null\n              ? Ink.image(image: imageProvider!, fit: BoxFit.cover)\n              : Icon(Icons.person, color: iconColor, size: size * 0.55),\n        ),\n      ),\n    );\n  }\n}\n"
  },
  {
    "name": "InputTextField",
    "description": "Rectangular rounded text input field with placeholder. Instances: 'Name', 'Email', 'Password', 'Height', 'Weight', plus single-line editable fields.",
    "standardization": "Configurable for placeholder, value, onChange, input type (text/password/number), optional icon.",
    "styling_changes": "Width adapts to layout, but padding, background, border radius, and font sizing remain consistent.",
    "code": "// lib/shared/components/input-text-field.dart\nimport 'package:flutter/material.dart';\nimport 'package:build_me_up/core/constants/app_colors.dart';\n\nclass InputTextField extends StatelessWidget {\n  const InputTextField({\n    super.key,\n    required this.height,\n    required this.hintText,\n    this.controller,\n    this.keyboardType,\n    this.textInputAction,\n    this.obscureText = false,\n  });\n\n  final double height;\n  final String hintText;\n  final TextEditingController? controller;\n  final TextInputType? keyboardType;\n  final TextInputAction? textInputAction;\n  final bool obscureText;\n\n  @override\n  Widget build(BuildContext context) {\n    return Material(\n      color: AppColors.inputFill,\n      borderRadius: BorderRadius.circular(height * 0.5),\n      child: SizedBox(\n        height: height,\n        child: Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 16),\n          child: Center(\n            child: TextFormField(\n              controller: controller,\n              keyboardType: keyboardType,\n              textInputAction: textInputAction,\n              obscureText: obscureText,\n              decoration: InputDecoration(\n                hintText: hintText,\n                hintStyle: TextStyle(\n                  color: AppColors.textPrimary,\n                  fontWeight: FontWeight.w500,\n                  fontSize: height * 0.36,\n                ),\n                border: InputBorder.none,\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n"
  },
  {
    "name": "HeaderSectionPanel",
    "description": "Wide rectangular colored background panel for context header, e.g. meal titles and calories summary. Instances: 'Breakfast', 'Lunch', 'Snack', 'Dinner', 'Account' top panel with avatar and name.",
    "standardization": "Accepts main label, optional subtitle/secondary text, and can optionally embed avatar or icon.",
    "styling_changes": "Panel height, content alignment, and background color are consistent; only inner text/avatar content changes.",
    "code": "// lib/shared/components/header-section-panel.dart\nimport 'package:flutter/material.dart';\nimport 'package:build_me_up/core/extensions/context_extensions.dart';\n\nclass HeaderSectionPanel extends StatelessWidget {\n  final double height;\n  final Color backgroundColor;\n  final String title;\n  final String? subtitle;\n  final Color textColor;\n  final Widget? trailing;\n\n  const HeaderSectionPanel({\n    super.key,\n    required this.height,\n    required this.backgroundColor,\n    required this.title,\n    this.subtitle,\n    this.textColor = const Color(0xFF354443),\n    this.trailing,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    final radius = BorderRadius.circular(context.heightUnit * 2.0);\n    return Container(\n      height: height,\n      width: double.infinity,\n      decoration: BoxDecoration(\n        color: backgroundColor,\n        borderRadius: radius,\n      ),\n      alignment: Alignment.center,\n      child: Column(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          Text(\n            title,\n            textAlign: TextAlign.center,\n            style: TextStyle(\n              fontSize: context.heightUnit * 2.6,\n              fontWeight: FontWeight.w700,\n              color: textColor,\n            ),\n          ),\n          if (subtitle != null) ...[\n            SizedBox(height: context.heightUnit * 0.8),\n            Text(\n              subtitle!,\n              style: TextStyle(\n                fontSize: context.heightUnit * 2.0,\n                fontWeight: FontWeight.w400,\n                color: textColor,\n              ),\n            ),\n          ],\n          if (trailing != null) trailing!,\n        ],\n      ),\n    );\n  }\n}\n"
  },
  {
    "name": "MealListItem",
    "description": "Horizontal row for listing meals/food with icon/image, name, subtitle, and actions (like plus/minus buttons). Instances: Food items in 'Breakfast', 'Lunch', 'Snack' details screens.",
    "standardization": "Configurable for image/icon, title, subtitle, value (e.g., quantity), and callback handlers for plus/minus. Modular to add/remove action buttons.",
    "styling_changes": "Row height, image size, and button spacing may adjust slightly; overall structure, font, and icon style are uniform.",
    "code": "// lib/shared/components/meal-list-item.dart\nimport 'package:flutter/material.dart';\nimport 'package:build_me_up/core/constants/app_colors.dart';\nimport 'package:build_me_up/core/extensions/context_extensions.dart';\n\nclass MealListItem extends StatelessWidget {\n  final String imagePath;\n  final String title;\n  final String subtitle;\n  final int value;\n  final VoidCallback onIncrement;\n  final VoidCallback onDecrement;\n\n  const MealListItem({\n    super.key,\n    required this.imagePath,\n    required this.title,\n    required this.subtitle,\n    required this.value,\n    required this.onIncrement,\n    required this.onDecrement,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    final avatarSize = context.widthUnit * 14;\n    final radius = context.heightUnit * 1.2;\n    final actionSize = context.heightUnit * 3.2;\n    final iconSize = context.heightUnit * 2.0;\n\n    return Row(\n      children: [\n        ClipRRect(\n          borderRadius: BorderRadius.circular(radius),\n          child: Image.asset(\n            imagePath,\n            width: avatarSize,\n            height: avatarSize,\n            fit: BoxFit.cover,\n          ),\n        ),\n        SizedBox(width: context.widthUnit * 4),\n        Expanded(\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                title,\n                style: context.textTheme.bodyLarge?.copyWith(\n                  color: AppColors.textDark,\n                  fontWeight: FontWeight.w600,\n                ),\n                maxLines: 1,\n                overflow: TextOverflow.ellipsis,\n              ),\n              SizedBox(height: context.heightUnit * 0.4),\n              Text(\n                subtitle,\n                style: context.textTheme.bodySmall?.copyWith(\n                  color: AppColors.textDark,\n                  fontWeight: FontWeight.w300,\n                ),\n              ),\n            ],\n          ),\n        ),\n        SizedBox(width: context.widthUnit * 2),\n        Material(\n          color: AppColors.primary,\n          shape: const CircleBorder(),\n          clipBehavior: Clip.antiAlias,\n          child: InkWell(\n            onTap: onDecrement,\n            child: SizedBox(\n              width: actionSize,\n              height: actionSize,\n              child: Icon(Icons.remove, color: AppColors.white, size: iconSize),\n            ),\n          ),\n        ),\n        SizedBox(width: context.widthUnit * 2),\n        Text(\n          '$value',\n          style: context.textTheme.titleMedium?.copyWith(\n            color: AppColors.textDark,\n            fontWeight: FontWeight.w600,\n          ),\n        ),\n        SizedBox(width: context.widthUnit * 2),\n        Material(\n          color: AppColors.primary,\n          shape: const CircleBorder(),\n          clipBehavior: Clip.antiAlias,\n          child: InkWell(\n            onTap: onIncrement,\n            child: SizedBox(\n              width: actionSize,\n              height: actionSize,\n              child: Icon(Icons.add, color: AppColors.white, size: iconSize),\n            ),\n          ),\n        ),\n      ],\n    );\n  }\n}\n"
  }
]*/
